name: Docker Build and Deploy

on:
  #Runs on demand
  workflow_dispatch: 
  
  #Runs every day at midnight
  #schedule:
  #   - cron: '0 0 * * *' 
  

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    env:
      LAMBDAIMAGE: "clamav_antivirus_scanner"
      REPOSITORY_ECR: "clamav_antivirus_scanner_repository"
      LAMBDANAME: "clamav_antivirus_scanner_lambda"

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Docker image
        run: docker build -t $LAMBDAIMAGE . --no-cache

      - name: Tag Docker image
        run: docker tag $LAMBDAIMAGE:latest ${{ steps.login-ecr.outputs.registry }}/$REPOSITORY_ECR:latest

      - name: Push Docker image
        id: push-image
        run: |
          docker push ${{ steps.login-ecr.outputs.registry }}/$REPOSITORY_ECR:latest
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Update Lambda function
        run: |
          aws lambda update-function-code --function-name $LAMBDANAME --image-uri ${{ steps.login-ecr.outputs.registry }}/$REPOSITORY_ECR:latest

